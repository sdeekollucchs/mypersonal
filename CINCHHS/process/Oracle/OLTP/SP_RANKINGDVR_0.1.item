<?xml version="1.0" encoding="UTF-8" standalone="no"?><talendfile:ProcessType xmlns:talendfile="platform:/resource/org.talend.model/model/TalendFile.xsd" xmlns:xmi="http://www.omg.org/XMI" defaultContext="Default" jobType="Standard" xmi:version="2.0">
  <context confirmationNeeded="false" name="Default"/>
  <parameters>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_X" show="false" value="0"/>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_Y" show="false" value="0"/>
    <elementParameter field="TEXT" name="REPOSITORY_CONNECTION_ID" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_PROPERTY_TYPENAME" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_HADOOP_DISTRIBUTION" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_HADOOP_VERSION" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_ENABLE_KERBEROS" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_NAME_NODE_PRINCIPAL" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_USERNAME" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_GROUP" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_USE_KEYTAB" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_KT_PRINCIPAL" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_KEY_TAB" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_ENABLE_OO_KERBEROS" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_NAME_NODE_END_POINT" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_JOB_TRACKER_ENDPOINT" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_END_POINT" show="false" value=""/>
    <elementParameter field="CHECK" name="IMPLICITCONTEXT_USE_PROJECT_SETTINGS" show="false" value="true"/>
    <elementParameter field="CHECK" name="STATANDLOG_USE_PROJECT_SETTINGS" show="false" value="true"/>
    <elementParameter field="CHECK" name="MULTI_THREAD_EXECATION" value="true"/>
    <elementParameter field="CHECK" name="IMPLICIT_TCONTEXTLOAD" value="false"/>
    <elementParameter field="RADIO" name="FROM_FILE_FLAG_IMPLICIT_CONTEXT" show="false" value="false"/>
    <elementParameter field="RADIO" name="FROM_DATABASE_FLAG_IMPLICIT_CONTEXT" show="false" value="false"/>
    <elementParameter field="FILE" name="IMPLICIT_TCONTEXTLOAD_FILE" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="FIELDSEPARATOR" show="false" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE_IMPLICIT_CONTEXT" show="false" value=""/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION_IMPLICIT_CONTEXT" show="false" value=""/>
    <elementParameter field="TEXT" name="URL_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR_IMPLICIT_CONTEXT" show="false"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PORT_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS_IMPLICIT_CONTEXT" show="false" value="enc:system.encryption.key.v1:BAG6acgNy0EgHLgEQExN3vfGXlvceN/D2ZUwbiiB"/>
    <elementParameter field="FILE" name="DBFILE_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="DBTABLE_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="QUERY_CONDITION_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="LOAD_NEW_VARIABLE" show="false" value="Warning"/>
    <elementParameter field="CLOSED_LIST" name="NOT_LOAD_OLD_VARIABLE" show="false" value="Warning"/>
    <elementParameter field="CHECK" name="PRINT_OPERATIONS" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_ERROR" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_WARNINGS" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_INFO" show="false" value="false"/>
    <elementParameter field="CHECK" name="ON_STATCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_LOGCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_METERCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_CONSOLE_FLAG" show="false" value="false"/>
    <elementParameter field="CHECK" name="ON_FILES_FLAG" show="false" value="false"/>
    <elementParameter field="DIRECTORY" name="FILE_PATH" show="false" value="&quot;C:/Talend/Talend-Studio-20190620_1446-V7.2.1/workspace/.metadata&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_STATS" show="false" value="&quot;stats_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_LOGS" show="false" value="&quot;logs_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_METTER" show="false" value="&quot;meter_file.txt&quot;"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="ISO-8859-15"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" show="false" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="ON_DATABASE_FLAG" show="false" value="false"/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE" show="false" value="tJDBCOutput"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" show="false" value="ORACLE_12"/>
    <elementParameter field="TEXT" name="URL" show="false" value="&quot;&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR" show="false"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PORT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DATASOURCE" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" show="false" value="enc:system.encryption.key.v1:Of0FOB+vpBTmDdBAYVdK/JkQ8SYNvajE3bChm9aa"/>
    <elementParameter field="FILE" name="DBFILE" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_STATS" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_LOGS" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_METER" show="false" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="CATCH_RUNTIME_ERRORS" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_ERRORS" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_WARNING" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_REALTIME_STATS" show="false" value="false"/>
    <elementParameter field="TEXT" name="HEADERFOOTER_HEADERID" show="false" value=""/>
    <elementParameter field="CHECK" name="HEADER_ENABLED" show="false" value="false"/>
    <elementParameter field="TEXT" name="HEADER_LIBRARY" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADER_CODE" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADER_IMPORT" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADERFOOTER_FOOTERID" show="false" value=""/>
    <elementParameter field="CHECK" name="FOOTER_ENABLED" show="false" value="false"/>
    <elementParameter field="TEXT" name="FOOTER_LIBRARY" show="false" value=""/>
    <elementParameter field="TEXT" name="FOOTER_CODE" show="false" value=""/>
    <elementParameter field="TEXT" name="FOOTER_IMPORT" show="false" value=""/>
    <routinesParameter id="_lqvKwB-kEeqq8f4oPOxh1A" name="DQTechnical"/>
    <routinesParameter id="_loqHIB-kEeqq8f4oPOxh1A" name="DataMasking"/>
    <routinesParameter id="_lrCFsB-kEeqq8f4oPOxh1A" name="DataOperation"/>
    <routinesParameter id="_lqbBsB-kEeqq8f4oPOxh1A" name="DataQualityDependencies"/>
    <routinesParameter id="_lqLxIB-kEeqq8f4oPOxh1A" name="DataQuality"/>
    <routinesParameter id="_lqkLoB-kEeqq8f4oPOxh1A" name="DqStringHandling"/>
    <routinesParameter id="_lrMdwB-kEeqq8f4oPOxh1A" name="Mathematical"/>
    <routinesParameter id="_lrSkYB-kEeqq8f4oPOxh1A" name="Numeric"/>
    <routinesParameter id="_lrYD8B-kEeqq8f4oPOxh1A" name="Relational"/>
    <routinesParameter id="_lq0qUB-kEeqq8f4oPOxh1A" name="SQLike"/>
    <routinesParameter id="_lreKkB-kEeqq8f4oPOxh1A" name="StringHandling"/>
    <routinesParameter id="_lrn7kB-kEeqq8f4oPOxh1A" name="TalendDataGenerator"/>
    <routinesParameter id="_lrv3YB-kEeqq8f4oPOxh1A" name="TalendDate"/>
    <routinesParameter id="_lsAWEB-kEeqq8f4oPOxh1A" name="TalendStringUtil"/>
    <routinesParameter id="_lr62gB-kEeqq8f4oPOxh1A" name="TalendString"/>
  </parameters>
  <node componentName="tOracleInput" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="128" posY="96">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBInput_1"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="false"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" show="false" value=""/>
    <elementParameter field="CLOSED_LIST" name="CONNECTION_TYPE" value="ORACLE_SID"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="ORACLE_18"/>
    <elementParameter field="TEXT" name="RAC_URL" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST" value="&quot;atd0-scan&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="Oracle"/>
    <elementParameter field="TEXT" name="PORT" value="&quot;1521&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" value="&quot;bidb.cchs.com&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="&quot;ODS&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;ODS&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="enc:system.encryption.key.v1:hj3qa0fCFPJtasKAilV0BMHGvHb19ZU45+8dDuCl/mKpZ0dHHFLzmeo="/>
    <elementParameter field="TEXT" name="JDBC_URL" show="false" value="&quot;jdbc:oracle:oci:/@talend&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="GUESS_SCHEMA" name="GUESS_SCHEMA" value="&quot;&quot;"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;----SPR Feb1 40 severity and rest 15-----&#13;&#10;&#13;&#10;&#13;&#10;SELECT&#13;&#10;    dvr_value current_ranking,&#13;&#10;    jobs,&#13;&#10;    jobs.service_job_status,&#13;&#10;    dvr.state,&#13;&#10;    dvr.account_number   sp_account_number,&#13;&#10;    dvr.company_name,&#13;&#10;    dvr.service_provider_sb_id,&#13;&#10;    dvr.national_account_flg,&#13;&#10;    --dvr.trade,&#13;&#10;    liability,&#13;&#10;    numberofclaims,&#13;&#10;    --dvr.item_grouping_detail_unit,&#13;&#10;    reascnt,&#13;&#10;    reastotcnt,&#13;&#10;    metricras, &#13;&#10;    pr_ras_percentagerank,&#13;&#10;    scoreras_15,&#13;&#10;    rtimesum         resptime_sum,&#13;&#10;    rtimecnt         resptime_cnt,&#13;&#10;    metricresptime,  &#13;&#10;    rtimeavg_pr      resptimeavg_pr,&#13;&#10;    scoreresptime_15,&#13;&#10;    metricseverity,  &#13;&#10;    severity_pr_30,&#13;&#10;    severity_pr_40,&#13;&#10;    rejcnt,&#13;&#10;    rejtotcnt,&#13;&#10;    rejratio,&#13;&#10;    metricrej, &#13;&#10;    rejpct_pr,&#13;&#10;    scorerej_15,&#13;&#10;    ctimesum,&#13;&#10;    ctimecnt,&#13;&#10;    metriccycletime,&#13;&#10;    ctimeavg_pr,&#13;&#10;    scorecycletime_25,&#13;&#10;    scorecycletime_15,&#13;&#10;    score_100_base,&#13;&#10;    score_100_base2,&#13;&#10;    ranking_base,&#13;&#10;    ranking_base2/*,&#13;&#10;    (&#13;&#10;        CASE&#13;&#10;            WHEN ( dvr_value = 'Tier 1-High'&#13;&#10;                   OR dvr_value = 'Tier 1-Medium'&#13;&#10;                   OR dvr_value = 'Tier 1-Low' )&#13;&#10;                 AND ranking != 'Tier 1-High'&#13;&#10;                 AND ranking != 'Tier 1-Medium'&#13;&#10;                 AND ranking != 'Tier 1-Low' THEN&#13;&#10;                'Tier 1-Low'&#13;&#10;            WHEN ( dvr_value = 'Tier 2-High'&#13;&#10;                   OR dvr_value = 'Tier 2-Medium'&#13;&#10;                   OR dvr_value = 'Tier 2-Low' )&#13;&#10;                 AND ranking != 'Tier 2-High'&#13;&#10;                 AND ranking != 'Tier 2-Medium'&#13;&#10;                 AND ranking != 'Tier 2-Low'&#13;&#10;                 AND ranking != 'Tier 3-High'&#13;&#10;                 AND ranking != 'Tier 3-Medium'&#13;&#10;                 AND ranking != 'Tier 3-Low' THEN&#13;&#10;                'Tier 2-High'&#13;&#10;            WHEN ( dvr_value = 'Tier 2-High'&#13;&#10;                   OR dvr_value = 'Tier 2-Medium'&#13;&#10;                   OR dvr_value = 'Tier 2-Low' )&#13;&#10;                 AND ranking != 'Tier 2-High'&#13;&#10;                 AND ranking != 'Tier 2-Medium'&#13;&#10;                 AND ranking != 'Tier 2-Low'&#13;&#10;                 AND ranking != 'Tier 1-High'&#13;&#10;                 AND ranking != 'Tier 1-Medium'&#13;&#10;                 AND ranking != 'Tier 1-Low' THEN&#13;&#10;                'Tier 2-Low'&#13;&#10;            WHEN dvr_value = 'Tier 3'&#13;&#10;                 AND dvr_value != 'Tier 3-High'&#13;&#10;                 AND dvr_value != 'Tier 3-Medium'&#13;&#10;                 AND ranking != 'Tier 3-Low' THEN&#13;&#10;                'Tier 3-High'&#13;&#10;            ELSE&#13;&#10;                ranking&#13;&#10;        END&#13;&#10;    ) ranking_with_guardrails*/&#13;&#10;FROM&#13;&#10;    (&#13;&#10;        SELECT&#13;&#10;            dvh.service_provider_sb_id,&#13;&#10;            sp.company_name,&#13;&#10;            sp.account_number,&#13;&#10;            sp.national_account_flg,&#13;&#10;            sp.state,&#13;&#10;            dvh.dvr_value,&#13;&#10;            --severity.trade,&#13;&#10;            severity.liability,&#13;&#10;            severity.numberofclaims,&#13;&#10;            --severity.item_grouping_detail_unit,&#13;&#10;            --severity.sjproduct_line,&#13;&#10;            round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0) + nvl(severity.severity_pr_30&#13;&#10;            , 0) + nvl(rej.rejpct_percentagerank_15, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0)), 0)) score_100_base,&#13;&#10;            round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0) + nvl(severity.severity_pr_40&#13;&#10;            , 0) + nvl(rej.rejpct_percentagerank_15, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0)), 0)) score_100_base2,&#13;&#10;            ras.reascnt,&#13;&#10;            ras.reastotcnt,&#13;&#10;            ras.reaspct                               metricras,&#13;&#10;            ras.pr_ras_percentagerank,&#13;&#10;            ras.pr_ras_percentagerank_15              scoreras_15,&#13;&#10;            resp.rtimesum,&#13;&#10;            resp.rtimecnt,&#13;&#10;            resp.rtimeavg                             metricresptime,&#13;&#10;            resp.rtimeavg_pr,&#13;&#10;            resp.rtimeavg_percentagerank_15           scoreresptime_15,&#13;&#10;            severity.severitysp_detail                metricseverity,&#13;&#10;            severity.severity_pr_30                   ,&#13;&#10;            severity.severity_pr_40                   ,&#13;&#10;            rej.rejcnt,&#13;&#10;            rej.rejtotcnt,&#13;&#10;            rej.rejratio,&#13;&#10;            rej.rejpct                                metricrej,&#13;&#10;            rej.rejpct_pr,&#13;&#10;            rej.rejpct_percentagerank_15              scorerej_15,&#13;&#10;            cycle.ctimesum,&#13;&#10;            cycle.ctimecnt,&#13;&#10;            cycle.ctimeavg                            metriccycletime,&#13;&#10;            cycle.ctimeavg_pr,&#13;&#10;            cycle.ctimeavg_percentagerank_25          scorecycletime_25 , &#13;&#10;            cycle.ctimeavg_percentagerank_15          scorecycletime_15 ,&#13;&#10;            (&#13;&#10;                CASE&#13;&#10;                    WHEN ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0) +&#13;&#10;                    nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &gt;= 84 ) THEN&#13;&#10;                        '1'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 84 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 68 ) ) THEN&#13;&#10;                        '2'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 68 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 52 ) ) THEN&#13;&#10;                        '3'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 52 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 36 ) ) THEN&#13;&#10;                        '4'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 36 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 20 ) ) THEN&#13;&#10;                        '5'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 20 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_30, 0) + nvl(cycle.ctimeavg_percentagerank_25, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 10 ) ) THEN&#13;&#10;                        '6'&#13;&#10;                    ELSE&#13;&#10;                        '7'&#13;&#10;                END&#13;&#10;            ) ranking_base,&#13;&#10;            (&#13;&#10;                CASE&#13;&#10;                    WHEN ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0) +&#13;&#10;                    nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &gt;= 84 ) THEN&#13;&#10;                        'Tier 1-High'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 84 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 68 ) ) THEN&#13;&#10;                        'Tier 1-Medium'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 68 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 52 ) ) THEN&#13;&#10;                        'Tier 1-Low'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 52 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 36 ) ) THEN&#13;&#10;                        'Tier 2-High'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 36 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 20 ) ) THEN&#13;&#10;                        'Tier 2-Medium'&#13;&#10;                    WHEN ( ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15, 0)&#13;&#10;                    + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl(rej.rejpct_percentagerank_15&#13;&#10;                    , 0)), 0)) &lt; 20 )&#13;&#10;                           AND ( round(trunc(to_number(nvl(ras.pr_ras_percentagerank_15, 0) + nvl(resp.rtimeavg_percentagerank_15&#13;&#10;                           , 0) + nvl(severity.severity_pr_40, 0) + nvl(cycle.ctimeavg_percentagerank_15, 0) + nvl&#13;&#10;                           (rej.rejpct_percentagerank_15, 0)), 0)) &gt;= 10 ) ) THEN&#13;&#10;                        'Tier 2-Low'&#13;&#10;                    ELSE&#13;&#10;                        'Tier 3'&#13;&#10;                END&#13;&#10;            ) ranking_base2&#13;&#10;            FROM&#13;&#10;            &#13;&#10;            --rgangula.dvr_history dvh,ods.fsm_sp sp&#13;&#10;            &#13;&#10;            ods.dvr_history dvh,ods.fsm_sp sp&#13;&#10;            &#13;&#10;  left join&#13;&#10;    -----------REASSIGNMENTS QUERY-----------&#13;&#10;             (&#13;&#10;                SELECT&#13;&#10;                    spaccount,&#13;&#10;                    spservicebenchid,&#13;&#10;                    --sjtrade,&#13;&#10;                    --item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line,&#13;&#10;                    COUNT(DISTINCT reasdtl.isreas) reascnt,&#13;&#10;                    COUNT(DISTINCT reasdtl.soid) reastotcnt,&#13;&#10;                    ( COUNT(DISTINCT reasdtl.isreas) / COUNT(DISTINCT reasdtl.soid) ) * 100 reaspct,&#13;&#10;                    ( PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            (COUNT(DISTINCT reasdtl.isreas) / COUNT(DISTINCT reasdtl.soid)) * 100 DESC&#13;&#10;                    ) ) pr_ras_percentagerank,&#13;&#10;                    case ( COUNT(DISTINCT reasdtl.isreas) / COUNT(DISTINCT reasdtl.soid) ) when 0 then 15 else ( PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            (COUNT(DISTINCT reasdtl.isreas) / COUNT(DISTINCT reasdtl.soid)) * 100 DESC&#13;&#10;                    ) ) * 15 end pr_ras_percentagerank_15 --15 is the paramater for RASPercentage: change it when business wants to change&#13;&#10;                FROM&#13;&#10;                    (&#13;&#10;                        SELECT DISTINCT&#13;&#10;                            osj.service_job_id     AS sjid,&#13;&#10;                            osj.service_order_id   AS soid,&#13;&#10;                            --oit.trade              AS sjtrade,&#13;&#10;                            --osj.product_line       AS sjproduct_line,&#13;&#10;                            coalesce(oit.unit, oit.item_description) AS item_grouping_detail_unit,&#13;&#10;                            osp.account_number     AS spaccount,&#13;&#10;                            osp.servicebench_id    AS spservicebenchid,&#13;&#10;                            trunc(osj.created_on_dt) sjdate,&#13;&#10;                           CASE&#13;&#10;                                WHEN ( osj.service_job_status IN (&#13;&#10;                                    'RAS',&#13;&#10;                                    'RES'&#13;&#10;                                )&#13;&#10;                                       AND osj.current_flg = 'Y'&#13;&#10;                                       AND ( MAX(osja.service_job_id) OVER(&#13;&#10;                                    PARTITION BY osj.service_order_id, osj.service_provider_account_num&#13;&#10;                                ) IS NULL )&#13;&#10;                                       AND ( coalesce(osj.product_status, 'a') &lt;&gt; 'RECALL'&#13;&#10;                                             OR ( coalesce(osj.product_status, 'a') = 'RECALL'&#13;&#10;                                                  AND to_number(regexp_substr(osj.service_job_id, '\w[^-]*$')) &lt; 3 ) ) ) THEN&#13;&#10;                                    osj.service_order_id&#13;&#10;                            END isreas&#13;&#10;                        FROM&#13;&#10;                            ods.fsm_sj         osj&#13;&#10;                            JOIN ods.fsm_sp         osp ON osj.service_provider_account_num = osp.account_number&#13;&#10;                                                   AND osp.current_flg = 'Y'&#13;&#10;                            JOIN ods.fsm_so         oso ON oso.service_order_id = osj.service_order_id&#13;&#10;                                                   AND oso.current_flg = 'Y'&#13;&#10;                            LEFT JOIN ods.fsm_item_h     oit ON osj.product_line = oit.item_code&#13;&#10;                                                            AND oit.current_flg = 'Y'&#13;&#10;                            LEFT JOIN ods.fsm_sj_audit   osja ON osja.service_job_id = osj.service_job_id&#13;&#10;                                                               AND osja.new_value IN (&#13;&#10;                                'REJECTED',&#13;&#10;                                'CANCELED'&#13;&#10;                            )&#13;&#10;                                                               AND osja.current_flg = 'Y'&#13;&#10;                        WHERE&#13;&#10;                            ( NOT ( osp.company_name IS NULL ) )&#13;&#10;                            AND ( osj.current_flg = 'Y' )&#13;&#10;                            AND trunc(to_date(osj.created_on_dt)) &gt;= to_date('01-FEB-2020') &#13;&#10;                            AND ( osp.lead_status = 'AC' )&#13;&#10;                            AND ( osp.account_status = '1' )&#13;&#10;                            AND ( osp.sp_sj_status = '1' )&#13;&#10;                            AND ( osj.service_job_type = 'OSR' )&#13;&#10;                            AND ( osp.service_provider_type IN (&#13;&#10;                                'BP',&#13;&#10;                                'BPACS'&#13;&#10;                            ) )&#13;&#10;                            AND ( osj.service_request_type = '1' )&#13;&#10;                            --AND osj.service_job_status = 'CMP'&#13;&#10;                            AND ( oit.category = 'Fuel Source' )&#13;&#10;                    ) reasdtl&#13;&#10;                GROUP BY&#13;&#10;                    spaccount,&#13;&#10;                    spservicebenchid--,&#13;&#10;                    --sjtrade,&#13;&#10;                    --sjproduct_line,&#13;&#10;                    --item_grouping_detail_unit&#13;&#10;                    HAVING (COUNT(DISTINCT SJid) &gt;= 0)  &#13;&#10;            ) ras ON sp.servicebench_id = ras.spservicebenchid&#13;&#10;---------------RESPONSE TIME QUERY------------------------&#13;&#10;            full outer JOIN &#13;&#10;             (&#13;&#10;                SELECT&#13;&#10;                    rtimedtl.spaccount,&#13;&#10;                    spservicebenchid,&#13;&#10;                    --rtimedtl.sjtrade,&#13;&#10;                    --item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line,&#13;&#10;                    SUM(rtimedtl.age) AS rtimesum,&#13;&#10;                    COUNT(rtimedtl.age) AS rtimecnt,&#13;&#10;                    AVG(rtimedtl.age) AS rtimeavg,&#13;&#10;                    PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            AVG(rtimedtl.age) DESC&#13;&#10;                    ) AS rtimeavg_pr,&#13;&#10;                   case AVG(rtimedtl.age) when 0 then 15 else ( PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            AVG(rtimedtl.age) DESC&#13;&#10;                    ) ) * 15 end rtimeavg_percentagerank_15 --15 is the paramater for ResponseTime: change it when business wants to change&#13;&#10;                FROM&#13;&#10;                    (&#13;&#10;                        SELECT DISTINCT&#13;&#10;                            osj.service_job_id     AS sjid,&#13;&#10;                            osj.service_order_id   AS soid,&#13;&#10;                            --oit.trade              AS sjtrade,&#13;&#10;                            --osj.product_line       AS sjproduct_line,&#13;&#10;                            --coalesce(oit.unit, oit.item_description) AS item_grouping_detail_unit,&#13;&#10;                            osp.account_number     AS spaccount,&#13;&#10;                            osp.servicebench_id    AS spservicebenchid,&#13;&#10;                            trunc(osj.created_on_dt) sjdate,&#13;&#10;                            trunc(to_date(oclm.approved_date, 'MM/DD/RR HH24:MI:SS')) clmappdt,&#13;&#10;                            trunc(to_date(oclm.date_repair_started, 'MM/DD/RR HH24:MI:SS')) clmrprstartdt,&#13;&#10;                            CASE&#13;&#10;                                WHEN to_date(oclm.date_repair_started, 'MM/DD/RR HH24:MI:SS') &gt;= trunc(osj.created_on_dt) THEN&#13;&#10;                                    ( trunc(to_date(oclm.date_repair_started, 'MM/DD/RR HH24:MI:SS')) - trunc(osj.created_on_dt) )&#13;&#10;                            END age&#13;&#10;                        FROM&#13;&#10;                            ods.fsm_sj       osj&#13;&#10;                            LEFT JOIN ods.fsm_claim oclm  ON oclm.service_job_id = osj.service_job_id&#13;&#10;                                                        AND oclm.current_flg = 'Y'&#13;&#10;                            LEFT JOIN ods.fsm_sp       osp ON oclm.service_provider_account_num = osp.account_number&#13;&#10;                                                        AND osp.current_flg = 'Y'&#13;&#10;                            JOIN ods.fsm_so       oso ON regexp_substr(oclm.service_job_id, '([[:alnum:]]+[^-*])') = oso.service_order_id&#13;&#10;                                                   AND oso.current_flg = 'Y'&#13;&#10;                            LEFT JOIN ods.fsm_item_h   oit ON osj.product_line = oit.item_code&#13;&#10;                                                            AND oit.current_flg = 'Y'&#13;&#10;                        WHERE&#13;&#10;                            osj.current_flg = 'Y'&#13;&#10;                            AND oclm.claim_status IN (&#13;&#10;                                'APP',&#13;&#10;                                'TRX',&#13;&#10;                                'PAY'&#13;&#10;                            )&#13;&#10;                            AND ( trunc(to_date(osj.created_on_dt)) &gt;= to_date('01-FEB-2020')) &#13;&#10;                            AND ( NOT ( osp.company_name IS NULL ) )&#13;&#10;                            AND ( osp.lead_status = 'AC' )&#13;&#10;                            AND ( osp.account_status = '1' )&#13;&#10;                            AND ( osp.sp_sj_status = '1' )&#13;&#10;                            AND ( osj.service_job_type = 'OSR' )&#13;&#10;                            AND ( osp.service_provider_type IN (&#13;&#10;                                'BP',&#13;&#10;                                'BPACS'&#13;&#10;                            ) )&#13;&#10;                            AND ( osj.service_request_type = '1' )&#13;&#10;                            AND oit.category = 'Fuel Source'&#13;&#10;                            AND osj.service_job_status = 'CMP'&#13;&#10;                    ) rtimedtl&#13;&#10;                GROUP BY&#13;&#10;                    rtimedtl.spaccount,&#13;&#10;                    spservicebenchid--,&#13;&#10;                    --rtimedtl.sjtrade,&#13;&#10;                    --item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line&#13;&#10;                    HAVING (COUNT(DISTINCT SJid) &gt;= 0)&#13;&#10;            ) resp ON ras.spservicebenchid = resp.spservicebenchid and ras.spaccount=resp.spaccount --and ras.sjtrade=resp.sjtrade and ras.item_grouping_detail_unit=resp.item_grouping_detail_unit and ras.sjproduct_line=resp.sjproduct_line&#13;&#10;----------------------------SEVERITY QUERY------------------&#13;&#10;            full outer JOIN&#13;&#10;             (&#13;&#10;                SELECT&#13;&#10;                    account_number,&#13;&#10;                    servicebench_id,&#13;&#10;                    --trade,&#13;&#10;                    --item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line,&#13;&#10;                    sum(liability_amount) liability,&#13;&#10;                    count(distinct claimnumber) numberofclaims,&#13;&#10;                   sum(liability_amount)/count(distinct claimnumber) AS severitysp_detail,&#13;&#10;                   case sum(liability_amount)/count(distinct claimnumber) when 0 then 30 else (PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                             sum(liability_amount)/count(distinct claimnumber) DESC&#13;&#10;                    ))*30 end severity_pr_30, --30 is the paramater for Severity: change it when business wants to change&#13;&#10;                    case sum(liability_amount)/count(distinct claimnumber) when 0 then 40 else (PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                             sum(liability_amount)/count(distinct claimnumber) DESC&#13;&#10;                    ))*40 end severity_pr_40 --40 is the paramater for Severity: change it when business wants to change&#13;&#10;                FROM&#13;&#10;                (SELECT&#13;&#10;                            --&quot;FSM_ITEM_H&quot;.&quot;TRADE&quot;         AS trade,&#13;&#10;                            &quot;FSM_SJ&quot;.&quot;SERVICE_JOB_ID&quot; as sjid,&#13;&#10;                            --&quot;FSM_ITEM_H&quot;.&quot;ITEM_CODE&quot; as sjproduct_line,&#13;&#10;                            --coalesce(&quot;FSM_ITEM_H&quot;.&quot;UNIT&quot;, &quot;FSM_ITEM_H&quot;.&quot;ITEM_DESCRIPTION&quot;) AS item_grouping_detail_unit,&#13;&#10;                            &quot;FSM_SP&quot;.&quot;ACCOUNT_NUMBER&quot;    AS account_number,&#13;&#10;                            &quot;FSM_SP&quot;.&quot;SERVICEBENCH_ID&quot;   AS servicebench_id,&#13;&#10;                            &quot;FSM_CLAIM&quot;.&quot;CLAIM_NUMBER&quot;   as claimnumber,&#13;&#10;                            &quot;FSM_CLAIM&quot;.&quot;CCHS_LIABILITY_AMT_APPROVED&quot; as liability_amount&#13;&#10;                    FROM                  &#13;&#10;                           &quot;ODS&quot;.&quot;FSM_SJ&quot;            &quot;FSM_SJ&quot;&#13;&#10;                            LEFT JOIN &quot;ODS&quot;.&quot;FSM_CLAIM&quot; &quot;FSM_CLAIM&quot;  ON ( &quot;FSM_SJ&quot;.&quot;SERVICE_JOB_ID&quot; = &quot;FSM_CLAIM&quot;.&quot;SERVICE_JOB_ID&quot; )&#13;&#10;                            LEFT JOIN &quot;ODS&quot;.&quot;FSM_SP&quot;            &quot;FSM_SP&quot; ON ( &quot;FSM_SJ&quot;.&quot;SERVICE_PROVIDER_SB_ID&quot; = &quot;FSM_SP&quot;.&quot;SERVICEBENCH_ID&quot; )&#13;&#10;                            LEFT JOIN &quot;ODS&quot;.&quot;FSM_SP_SJ_TYPES&quot;   &quot;FSM_SP_SJ_TYPES&quot; ON ( ( &quot;FSM_SJ&quot;.&quot;SERVICE_JOB_TYPE&quot; = &quot;FSM_SP_SJ_TYPES&quot;.&quot;SERVICE_JOB_TYPE&quot; )  &#13;&#10;                                                                                AND ( &quot;FSM_SJ&quot;.&quot;SERVICE_PROVIDER_SB_ID&quot; = &quot;FSM_SP_SJ_TYPES&quot;.&quot;SERVICEBENCH_ID&quot; ) )&#13;&#10;                            LEFT JOIN &quot;ODS&quot;.&quot;FSM_ITEM_H&quot;        &quot;FSM_ITEM_H&quot; ON ( &quot;FSM_SJ&quot;.&quot;PRODUCT_LINE&quot; = &quot;FSM_ITEM_H&quot;.&quot;ITEM_CODE&quot; )&#13;&#10;                            LEFT JOIN &quot;ODS&quot;.&quot;FSM_SO&quot;            &quot;FSM_SO&quot; ON ( &quot;FSM_SJ&quot;.&quot;SERVICE_ORDER_ID&quot; = &quot;FSM_SO&quot;.&quot;SERVICE_ORDER_ID&quot; )&#13;&#10;                        WHERE&#13;&#10;                            ( ( &quot;FSM_CLAIM&quot;.&quot;CLAIM_STATUS&quot; IN (&#13;&#10;                                'APP',&#13;&#10;                                'PAY',&#13;&#10;                                'TRX'&#13;&#10;                            ) )&#13;&#10;                            AND ( NOT ( &quot;FSM_SP&quot;.&quot;COMPANY_NAME&quot; IS NULL ) )&#13;&#10;                             AND trunc(to_date(&quot;FSM_SJ&quot;.&quot;CREATED_ON_DT&quot;)) &gt;=  to_date('01-FEB-2020') &#13;&#10;                              AND ( &quot;FSM_CLAIM&quot;.&quot;CURRENT_FLG&quot; = 'Y' )&#13;&#10;                              AND ( &quot;FSM_SP&quot;.&quot;CURRENT_FLG&quot; = 'Y' )&#13;&#10;                              AND ( &quot;FSM_SO&quot;.&quot;CURRENT_FLG&quot; = 'Y' )&#13;&#10;                              AND ( &quot;FSM_ITEM_H&quot;.&quot;CURRENT_FLG&quot; = 'Y' )&#13;&#10;                              AND ( &quot;FSM_SJ&quot;.&quot;CURRENT_FLG&quot; = 'Y' )&#13;&#10;                              AND ( &quot;FSM_SP_SJ_TYPES&quot;.&quot;CURRENT_FLG&quot; = 'Y' )&#13;&#10;                              AND ( &quot;FSM_SP&quot;.&quot;LEAD_STATUS&quot; = 'AC' )&#13;&#10;                              AND ( FSM_SP.account_status = '1' )&#13;&#10;                              AND ( FSM_SP.sp_sj_status = '1' )&#13;&#10;                              AND ( &quot;FSM_SJ&quot;.&quot;SERVICE_JOB_TYPE&quot; = 'OSR' )&#13;&#10;                             AND ( &quot;FSM_SP&quot;.&quot;SERVICE_PROVIDER_TYPE&quot; IN (&#13;&#10;                                'BP',&#13;&#10;                                'BPACS'&#13;&#10;                            ) )&#13;&#10;                              AND ( &quot;FSM_SJ&quot;.&quot;SERVICE_REQUEST_TYPE&quot; = '1' )&#13;&#10;                              AND &quot;FSM_SJ&quot;.service_job_status = 'CMP'&#13;&#10;                             AND ( &quot;FSM_ITEM_H&quot;.&quot;CATEGORY&quot; = 'Fuel Source' )&#13;&#10;                               )&#13;&#10;                    )&#13;&#10;                GROUP BY&#13;&#10;                    account_number,&#13;&#10;                    servicebench_id--,&#13;&#10;                    --trade,&#13;&#10;                    --item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line&#13;&#10;                     HAVING (COUNT(DISTINCT sjid) &gt;= 0)&#13;&#10;            ) severity ON resp.spservicebenchid = severity.servicebench_id and resp.spaccount=severity.account_number --and resp.sjtrade=severity.trade and resp.item_grouping_detail_unit=severity.item_grouping_detail_unit and resp.sjproduct_line=severity.sjproduct_line&#13;&#10;----------------REJECTIONS QUERY-------------&#13;&#10;            full outer JOIN&#13;&#10;             (&#13;&#10;                SELECT&#13;&#10;                    spaccount,&#13;&#10;                    spservicebenchid,&#13;&#10;                    --sjtrade,&#13;&#10;                    --item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line,&#13;&#10;                    COUNT(DISTINCT rejdtl.isrej) rejcnt,&#13;&#10;                    COUNT(DISTINCT rejdtl.soid) rejtotcnt,&#13;&#10;                    COUNT(DISTINCT rejdtl.isrej) / COUNT(DISTINCT rejdtl.soid) rejratio,&#13;&#10;                    ( COUNT(DISTINCT rejdtl.isrej) / COUNT(DISTINCT rejdtl.soid) ) * 100 rejpct,&#13;&#10;                    PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            (COUNT(DISTINCT rejdtl.isrej) / COUNT(DISTINCT rejdtl.soid)) * 100 DESC&#13;&#10;                    ) rejpct_pr,&#13;&#10;                    case COUNT(DISTINCT rejdtl.isrej) / COUNT(DISTINCT rejdtl.soid) when 0 then 15 else ( PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            (COUNT(DISTINCT rejdtl.isrej) / COUNT(DISTINCT rejdtl.soid)) * 100 DESC&#13;&#10;                    ) ) * 15 end rejpct_percentagerank_15 --15 is the paramater for ResponseTime: change it when business wants to change&#13;&#10;                FROM&#13;&#10;                    (&#13;&#10;                        SELECT DISTINCT&#13;&#10;                            osj.service_job_id     AS sjid,&#13;&#10;                            osj.service_order_id   AS soid,&#13;&#10;                            --oit.trade              AS sjtrade,&#13;&#10;                            --osj.product_line       AS sjproduct_line,&#13;&#10;                            --coalesce(oit.unit, oit.item_description) AS item_grouping_detail_unit,&#13;&#10;                            osp.account_number     AS spaccount,&#13;&#10;                            osp.servicebench_id    AS spservicebenchid,&#13;&#10;                            trunc(osj.created_on_dt) sjdate,&#13;&#10;                            CASE&#13;&#10;                                WHEN MAX(osja.new_value) OVER(&#13;&#10;                                    PARTITION BY osj.service_order_id, osj.service_provider_account_num&#13;&#10;                                ) = 'REJECTED'&#13;&#10;                                     AND coalesce(osj.reject_reason, 'a') NOT IN (&#13;&#10;                                    'Customer Cancelled Service Request',&#13;&#10;                                    'Could Not Contact Customer'&#13;&#10;                                ) THEN&#13;&#10;                                    osj.service_order_id&#13;&#10;                            END isrej&#13;&#10;                        FROM&#13;&#10;                            ods.fsm_sj         osj&#13;&#10;                            JOIN ods.fsm_sp         osp ON osj.service_provider_account_num = osp.account_number&#13;&#10;                                                   AND osp.current_flg = 'Y'&#13;&#10;                            JOIN ods.fsm_so         oso ON oso.service_order_id = osj.service_order_id&#13;&#10;                                                   AND oso.current_flg = 'Y' &#13;&#10;                            LEFT JOIN ods.fsm_item_h     oit ON osj.product_line = oit.item_code&#13;&#10;                                                            AND oit.current_flg = 'Y'&#13;&#10;                            LEFT JOIN ods.fsm_sj_audit   osja ON osja.service_job_id = osj.service_job_id&#13;&#10;                                                               AND osja.new_value IN (&#13;&#10;                                'REJECTED'&#13;&#10;                            )&#13;&#10;                                                               AND osja.current_flg = 'Y'&#13;&#10;                            LEFT JOIN   ods.Fsm_Sj_Audit osjA&#13;&#10;                                                            ON osja.service_job_id = osj.service_job_id&#13;&#10;                                                            AND osjA.NEW_VALUE IN ( 'REJECTED')&#13;&#10;                                                            AND osjA.FIELD_NAME = 'Service Job Status'&#13;&#10;                                                            and osja.current_flg = 'Y'&#13;&#10;                        WHERE&#13;&#10;                            ( osj.current_flg = 'Y' ) &#13;&#10;                            AND ( trunc(to_date(osj.created_on_dt))  &gt;= to_date('01-FEB-2020'))&#13;&#10;                            AND ( osp.lead_status = 'AC' )&#13;&#10;                            AND ( osp.account_status = '1' )&#13;&#10;                            AND ( osp.sp_sj_status = '1' )&#13;&#10;                            AND ( osj.service_job_type = 'OSR' )&#13;&#10;                            AND ( osp.service_provider_type IN (&#13;&#10;                                'BP',&#13;&#10;                                'BPACS'&#13;&#10;                            ) )&#13;&#10;                            AND ( osj.service_request_type = '1' )&#13;&#10;                            AND oit.category = 'Fuel Source'  &#13;&#10;                            AND ( NOT ( osp.company_name IS NULL ) )&#13;&#10;                            --AND osj.service_job_status = 'CMP'&#13;&#10;                    ) rejdtl&#13;&#10;                GROUP BY&#13;&#10;                    spaccount,&#13;&#10;                    spservicebenchid--,&#13;&#10;                    --sjtrade,&#13;&#10;                    --item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line&#13;&#10;                    HAVING (COUNT(DISTINCT SJid) &gt;= 0)&#13;&#10;            ) rej ON severity.servicebench_id = rej.spservicebenchid and severity.account_number=rej.spaccount --and severity.trade=rej.sjtrade and severity.item_grouping_detail_unit=rej.item_grouping_detail_unit and severity.sjproduct_line=rej.sjproduct_line&#13;&#10;---------------CYCLE TIME QUERY---------------------&#13;&#10;            full outer JOIN&#13;&#10;             (&#13;&#10;                SELECT&#13;&#10;                    ctimedtl.spaccount,&#13;&#10;                    ctimedtl.spservicebenchid,&#13;&#10;                    --ctimedtl.sjtrade,&#13;&#10;                    --ctimedtl.item_grouping_detail_unit,&#13;&#10;                    --sjproduct_line,&#13;&#10;                    SUM(ctimedtl.age) AS ctimesum,&#13;&#10;                    COUNT(ctimedtl.age) AS ctimecnt,&#13;&#10;                    AVG(ctimedtl.age) AS ctimeavg,&#13;&#10;                    PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            AVG(ctimedtl.age) DESC&#13;&#10;                    ) AS ctimeavg_pr,&#13;&#10;                    case AVG(ctimedtl.age) when 0 then 25 else ( PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            AVG(ctimedtl.age) DESC&#13;&#10;                    ) ) * 25 end AS ctimeavg_percentagerank_25, --25 is the paramater for ResponseTime: change it when business wants to change&#13;&#10;                    case AVG(ctimedtl.age) when 0 then 15 else ( PERCENT_RANK() OVER(&#13;&#10;                        ORDER BY&#13;&#10;                            AVG(ctimedtl.age) DESC&#13;&#10;                    ) ) * 25 end AS ctimeavg_percentagerank_15 --15 is the paramater for ResponseTime: change it when business wants to change&#13;&#10;                FROM&#13;&#10;                    (&#13;&#10;                        SELECT DISTINCT&#13;&#10;                            osp.account_number     AS spaccount,&#13;&#10;                            osp.servicebench_id    AS spservicebenchid,&#13;&#10;                            osj.service_job_id     AS sjid,&#13;&#10;                            osj.service_order_id   AS soid,&#13;&#10;                            --oit.trade              AS sjtrade,&#13;&#10;                            --osj.product_line       AS sjproduct_line,&#13;&#10;                            --coalesce(oit.unit, oit.item_description) AS item_grouping_detail_unit,                                   &#13;&#10;                            osj.created_on_dt      sjdate,&#13;&#10;                            osj.service_job_status,&#13;&#10;                            oclm.claim_status,&#13;&#10;                            osj.sub_status,&#13;&#10;                            trunc(to_date(oclm.approved_date, 'MM/DD/RR HH24:MI:SS')) clmappdt,&#13;&#10;                            trunc(to_date(osj.service_job_status_date, 'MM/DD/RR HH24:MI:SS')) sjsjstatdt,&#13;&#10;                            to_date(osj.service_job_status_date, 'MM/DD/RR HH24:MI:SS') sjsjstatdttm,&#13;&#10;                            CASE&#13;&#10;                                WHEN ( osj.service_job_status = 'CMP'&#13;&#10;                                       OR osj.sub_status = 'ACP' )&#13;&#10;                                     AND MIN(to_date(oclm.approved_date, 'MM/DD/RR HH24:MI:SS')) OVER(&#13;&#10;                                    PARTITION BY osj.service_job_id&#13;&#10;                                ) = to_date(oclm.approved_date, 'MM/DD/RR HH24:MI:SS') THEN&#13;&#10;                                    trunc(to_date(osj.service_job_status_date, 'MM/DD/RR HH24:MI:SS')) - trunc(osj.created_on_dt)&#13;&#10;                            END age&#13;&#10;                        FROM&#13;&#10;                            ods.fsm_sj       osj&#13;&#10;                            LEFT JOIN ods.fsm_claim    oclm ON oclm.service_job_id = osj.service_job_id&#13;&#10;                                                            AND oclm.current_flg = 'Y'&#13;&#10;                            LEFT JOIN ods.fsm_sp       osp ON osj.service_provider_account_num = osp.account_number&#13;&#10;                                                        AND osp.current_flg = 'Y'&#13;&#10;                            JOIN ods.fsm_so       oso ON osj.service_order_id = oso.service_order_id&#13;&#10;                                                   AND oso.current_flg = 'Y' &#13;&#10;                            LEFT JOIN ods.fsm_item_h   oit ON osj.product_line = oit.item_code&#13;&#10;                                                            AND oit.current_flg = 'Y'&#13;&#10;                        WHERE&#13;&#10;                            osj.current_flg = 'Y'&#13;&#10;                            AND oclm.claim_status IN (&#13;&#10;                                'APP',&#13;&#10;                                'TRX',&#13;&#10;                                'PAY'&#13;&#10;                            )&#13;&#10;                            AND trunc(to_date(osj.created_on_dt)) &gt;= to_date('01-FEB-2020')&#13;&#10;                            AND ( osp.lead_status = 'AC' )&#13;&#10;                            AND ( osj.service_job_type = 'OSR' )&#13;&#10;                            AND ( osp.account_status = '1')&#13;&#10;                            AND ( osp.sp_sj_status = '1')&#13;&#10;                            AND ( osp.service_provider_type IN (&#13;&#10;                                'BP',&#13;&#10;                                'BPACS'&#13;&#10;                            ) )&#13;&#10;                            AND ( osj.service_request_type = '1' )&#13;&#10;                            AND osj.service_job_status = 'CMP'&#13;&#10;                            AND oit.category = 'Fuel Source'&#13;&#10;                            AND ( NOT ( osp.company_name IS NULL ) ) ) ctimedtl&#13;&#10;                GROUP BY&#13;&#10;                    ctimedtl.spaccount,&#13;&#10;                    ctimedtl.spservicebenchid--,&#13;&#10;                    --ctimedtl.sjtrade,&#13;&#10;                    --ctimedtl.item_grouping_detail_unit,&#13;&#10;                    --ctimedtl.sjproduct_line&#13;&#10;                    HAVING (COUNT(DISTINCT SJid) &gt;= 0)&#13;&#10;            ) cycle ON rej.spservicebenchid = cycle.spservicebenchid and rej.spaccount=cycle.spaccount --and rej.sjtrade=cycle.sjtrade and rej.item_grouping_detail_unit=cycle.item_grouping_detail_unit and rej.sjproduct_line = cycle.sjproduct_line&#13;&#10;    where sp.lead_status = 'AC' AND sp.service_provider_type IN (&#13;&#10;                                'BP',&#13;&#10;                                'BPACS')&#13;&#10;                                and sp.company_name IS not NULL&#13;&#10;            and dvr_type = 'RANKING'&#13;&#10;            and sp.servicebench_id=dvh.service_provider_sb_id&#13;&#10;            and sp.current_flg='Y'&#13;&#10;            and dvr_run_id='1'&#13;&#10;            and sp.sp_sj_status = '1'&#13;&#10;            and sp.account_status = '1'&#13;&#10;    )dvr &#13;&#10;    full outer join&#13;&#10;    ( SELECT&#13;&#10;    sp.account_number jobs_acct_num,&#13;&#10;    COUNT(DISTINCT(service_job_id)) jobs,&#13;&#10;    --trade,&#13;&#10;    --coalesce(oit.unit, oit.item_description) AS item_grouping_detail_unit,&#13;&#10;    --oit.item_code sjproduct_line,&#13;&#10;    sp.state,&#13;&#10;    sj.service_job_status&#13;&#10;FROM&#13;&#10;    fsm_sp   sp,&#13;&#10;    fsm_sj   sj,&#13;&#10;    fsm_item_h oit&#13;&#10;WHERE&#13;&#10;    sp.current_flg = 'Y'&#13;&#10;    and oit.current_flg = 'Y'&#13;&#10;    AND sj.current_flg = 'Y'&#13;&#10;    and sj.product_line = oit.item_code&#13;&#10;    AND sp.servicebench_id = sj.service_provider_sb_id&#13;&#10;    AND (trunc(to_date(sj.created_on_dt)) &gt;= to_date('01-FEB-2020'))&#13;&#10;    AND sj.service_job_status = 'CMP'&#13;&#10;GROUP BY&#13;&#10;    account_number,sj.service_job_status,sp.state--,trade,coalesce(oit.unit, oit.item_description),item_code&#13;&#10;)jobs on dvr.account_number=jobs.jobs_acct_num and dvr.state=jobs.state --and dvr.trade=jobs.trade and dvr.item_grouping_detail_unit=jobs.item_grouping_detail_unit and dvr.sjproduct_line=jobs.sjproduct_line --group by dvr.dvr_value,dvr.account_number,dvr.national_account_flg,jobs.jobs,dvr.company_name,dvr.state&quot;"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" show="false" value="&quot;&quot;"/>
    <elementParameter field="MAPPING_TYPE" name="MAPPING" show="false" value="oracle_id"/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;&quot;"/>
    <elementParameter field="LABEL" name="NOTE" value="*Note: Example for Additional JDBC Parameters: &quot;parameterName1=value1&amp;&amp;parameterName2=value2&quot;"/>
    <elementParameter field="CHECK" name="IS_CONVERT_XMLTYPE" value="false"/>
    <elementParameter field="TABLE" name="CONVERT_XMLTYPE" show="false"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="USE_CURSOR" value="false"/>
    <elementParameter field="TEXT" name="CURSOR_SIZE" show="false" value="1000"/>
    <elementParameter field="CHECK" name="TRIM_ALL_COLUMN" value="false"/>
    <elementParameter field="TABLE" name="TRIM_COLUMN"/>
    <elementParameter field="CHECK" name="NO_NULL_VALUES" value="false"/>
    <metadata connector="FLOW" name="tDBInput_1"/>
  </node>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tDBInput_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#" Id="_b7880191-eb14-486e-87b9-6231bafdb845"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"/><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><DigestValue>pItLV4aRgmPhbW6oof8D3OBFf2Xx61w+m5IhhPXz+SOhdbQRRqR1NdR17NXTB76fsBusm7fCnIrB
7Zky/ivRrw==</DigestValue></Reference><Reference Type="http://www.w3.org/2000/09/xmldsig#SignatureProperties" URI="#_fed0d3c1-bd5e-4a9a-b0a5-8d584ed5e9c6"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><DigestValue>x1fqlPgY9RmYkl0QvJLSz1njGVqlaclghTyP9AqZWgNNPyE7CY6bQP1+YvxtmzH1+ZM4laGLfJtz
nmiI80dErg==</DigestValue></Reference></SignedInfo><SignatureValue>JWUAKgyEJDa2HdRQtysanUsesvfw7OBXRHbdJed5qPueMYMV1Jfk22j3k4ava4nl0n/dJm05EXo1
3jK/eG5F0njk1kXHM0ZpPczfL7ZJfJgCMPpaVM0sPJ8a8RMg/txrDxR8El2VNnrDa+kcDkXZl+bJ
w95jZO1T/g3oDer1FsERRqwm9FWWK4LRjFpxCFnw7MynWDPZsTGMdJjZSrZfbOd80whb6b4jE9We
BgODaRwQqNnt4ej9F2LQ8vS1kMnERNq+Xcng/d201nPJlLnNsBOm6P/lQu4fVFrTQdoRhryYLSBc
dhGsKAxx9O94wFATHVj4QcxLAUhYe1hjG3azsQ==</SignatureValue><KeyInfo><X509Data><X509SubjectName>C=FR,ST=Paris,L=Paris,O=Talend Inc.,OU=R&amp;D,CN=Talend Code Signing certificate</X509SubjectName><X509Certificate>MIIFADCCAuigAwIBAgIIA2OsD6bRyj0wDQYJKoZIhvcNAQELBQAwgY0xCzAJBgNVBAYTAkZSMQ4w
DAYDVQQIEwVQYXJpczEOMAwGA1UEBxMFUGFyaXMxFDASBgNVBAoTC1RhbGVuZCBJbmMuMQwwCgYD
VQQLDANSJkQxFjAUBgNVBAMMDVRhbGVuZCBSJkQgQ0ExIjAgBgkqhkiG9w0BCQEWE3NlY3VyaXR5
QHRhbGVuZC5jb20wHhcNMTkwNjAzMDgxODIwWhcNMjkwNjAzMDAwMDAwWjB7MSgwJgYDVQQDEx9U
YWxlbmQgQ29kZSBTaWduaW5nIGNlcnRpZmljYXRlMQwwCgYDVQQLDANSJkQxFDASBgNVBAoTC1Rh
bGVuZCBJbmMuMQ4wDAYDVQQHEwVQYXJpczEOMAwGA1UECBMFUGFyaXMxCzAJBgNVBAYTAkZSMIIB
IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp5TMF8BmRt8dY51t9kIDdDkoOKVVytJN2gn2
DhMGi8hzpUofNDykJDhe9SPqyJdGZ6o/h7laTA0/CivKyPT1OJQ9E2gMHKs8cTZM/cO2w0Atlqkl
alIxepol0DNnUtmECVBqdnVsJesfmdoeptxgJAtxYbquFsTsrATNY2cscXpwmOca/Ewip48WQLFx
e5s067jaIsAQGRIqpIup3bOtWBySrtImJ40lQCPeEcl96qzkv3utaVaNc3ukkhYkCDbMbK8NVd1B
CVeeIBAe+n/SdpHH20o+6eIiZecsBGDLwlTYrFvuVqAa6xI7y8Vdz6irjPAVBEtG/iOc782aJ/lZ
TwIDAQABo3UwczAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEF
BQcDAzAdBgNVHQ4EFgQUGdfzQEbjQnANq28sfhEMTx+rsOcwHwYDVR0jBBgwFoAU530Lcvy1gZnG
gCvZLOyCczK1qPcwDQYJKoZIhvcNAQELBQADggIBAEr22wnaQwZm2dhbUCqD+qZpTq2AF/tzxqAM
eL/CiTjPbTblS4SNNwCKvTgMe9ucpUbenXmK7xE+DU9dN4om+t3VHbkOLQVyuLcd2WGsy7ZGwRvA
f+TFwLbwjyTukOGm6Sd1qyZgvCPzBsKnft6vscvGy2yEpmFCeHJyBP8pvchg607zguRdNbkGYZXw
G6jNipAbTtzdPTFKKr1bEf0sUGqMrlZIMPjflh2Vewu8ImNdX5IZdvBD6DdFVOC5wqV6u+W9ukE/
mXZxDBYNl2AF7FTh04ucEVN3mHv7m2L0uFvUlhxchcagJhJsdQG+A0LVCemHbp6CSNQJx02KxqUG
hakvpzhOyLo91h8YAQrEZJdNuKA8IYmBrFZQZDCz0uywKSyFfzPyJhvxylCLG/iDPPfE0VWcrMJ/
WQJly/2XPg/NBCTF3pSKS0kCiA7PeaI3cWkMYYA3PMwYDvzqs1opBRglG7ikj0bQxSm3lcjMuuvW
gBRksFKjP3K/nztsjSoYITOM9jR29ReIL3v0E8RbAFwA2RGq6Dxd0ixfbucMesy5Gnr8tfYy6rW+
qSQqd3ah4+PSzBNVwIB4ytpdrG3SlhCI2i2Th8ek8Sjsaquh9qPAerWNd2+84HWOOGj1Xe1qc6vg
qqu6JoK9EXKDiwBqDVkueIa+MhamE1VDnhn2pPui</X509Certificate></X509Data></KeyInfo><Object><SignatureProperties><SignatureProperty Id="_fed0d3c1-bd5e-4a9a-b0a5-8d584ed5e9c6" Target="#_b7880191-eb14-486e-87b9-6231bafdb845"><Timestamp>2020-04-30 19:34:48</Timestamp></SignatureProperty></SignatureProperties></Object></Signature></talendfile:ProcessType>